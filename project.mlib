<?xml version="1.0" ?>
<materialLib name="NPR">

        <shaders>
                <shader name="toon" vs="shaders/toon.vert" ps="shaders/toon.frag" />
                <shader name="hatch" vs="shaders/hatch.vert" ps="shaders/hatch.frag" />
                <shader name="gooch" vs="shaders/gooch.vert" ps="shaders/gooch.frag" />
        </shaders>

        <textures>
                <texture name="teapot" filename="textures/teapot.jpg"  mipmap="true"/>
                <texture name="hatch0" filename="textures/0.jpg"  mipmap="true"/>
                <texture name="hatch1" filename="textures/10.jpg"  mipmap="true"/>
                <texture name="hatch2" filename="textures/20.jpg"  mipmap="true"/>
                <texture name="hatch3" filename="textures/30.jpg"  mipmap="true"/>
                <texture name="hatch4" filename="textures/40.jpg"  mipmap="true"/>
                <texture name="hatch5" filename="textures/50.jpg"  mipmap="true"/>
        </textures>

        <materials>
                <material name="toon">
                        <color>
                                <DIFFUSE r="0.3" g="0.8" b="0.4" />
                        </color>

                        <shader name="toon" >
                                <values>
                                        <valueof uniform="m_pvm"
                                                type="RENDERER"
                                                component="PROJECTION_VIEW_MODEL" />

                                        <valueof uniform="l_dir"
                                                type="LIGHT"
                                                component="NORMALIZED_DIRECTION" 
                                                id="0" /> <!-- luz 0, caso tenha várias luzes ou então utilizar context="Sun" -->

                                        <valueof uniform="m_view"
                                                type="RENDERER"
                                                component="VIEW" />

                                        <valueof uniform="m_normal"  
                                                type="RENDERER"
                                                component="NORMAL" /> <!-- ver documentação -->

                                        <valueof uniform="m_viewModel"  
                                                type="RENDERER"
                                                component="VIEW_MODEL" />
  
                                        <valueof uniform="diffuse"
                                                type="COLOR"
                                                context="CURRENT" 
                                                component="DIFFUSE" />

                                        <valueof uniform="specular" type="COLOR"
                                                component = "SPECULAR" />

                                        <valueof uniform="shininess" type="COLOR"
                                                component = "SHININESS" /> 

                                        <valueof uniform="num_shades" type="RENDERER"
                                                component="num_shades" />                           
                                </values>
                        </shader>

                        <textures>
                                <texture name="teapot" UNIT="0"/>
                        </textures>
                </material>


		<material name="hatch">
                        <color>
                                <DIFFUSE r="0.3" g="0.8" b="0.4" />
                        </color>

                        <shader name="hatch" >
                                <values>
                                        <valueof uniform="m_pvm"
                                                type="RENDERER"
                                                component="PROJECTION_VIEW_MODEL" />

                                        <valueof uniform="ldir"
                                                type="LIGHT"
                                                component="NORMALIZED_DIRECTION" 
                                                id="0" />

                                        <valueof uniform="m_view"
                                                type="RENDERER"
                                                component="VIEW" />

                                        <valueof uniform="m_normal"  
                                                type="RENDERER"
                                                component="NORMAL" />

                                        <valueof uniform="m_viewModel"  
                                                type="RENDERER"
                                                component="VIEW_MODEL" />
                                                
                                        <valueof uniform="diffuse"
                                                type="COLOR"
                                                context="CURRENT" 
                                                component="DIFFUSE" />

                                        <valueof uniform="specular" type="COLOR"
                                                component = "SPECULAR" />

                                        <valueof uniform="shininess" type="COLOR"
                                                component = "SHININESS" />  

                                        <valueof uniform="hatch0" type="TEXTURE_BINDING"
                                                component="UNIT"
                                                id="0" />        

                                        <valueof uniform="hatch1" type="TEXTURE_BINDING"
                                                component="UNIT"
                                                id="1" />

                                        <valueof uniform="hatch2" type="TEXTURE_BINDING"
                                                component="UNIT"
                                                id="2" />

                                        <valueof uniform="hatch3" type="TEXTURE_BINDING"
                                                component="UNIT"
                                                id="3" />
                                        
                                        <valueof uniform="hatch4" type="TEXTURE_BINDING"
                                                component="UNIT"
                                                id="4" />
                                        
                                        <valueof uniform="hatch5" type="TEXTURE_BINDING"
                                                component="UNIT"
                                                id="5" />
                                        
                                </values>
                        </shader>

                        <textures>
                                <texture name="teapot" UNIT="7"/>
                                <texture name="hatch0" UNIT="0"/>
                                <texture name="hatch1" UNIT="1"/>
                                <texture name="hatch2" UNIT="2"/>
                                <texture name="hatch3" UNIT="3"/>
                                <texture name="hatch4" UNIT="4"/>
                                <texture name="hatch5" UNIT="5"/>
                        </textures>

                </material>

                <material name="gooch">
                        <color>
                                <DIFFUSE r="0.3" g="0.8" b="0.4" />
                        </color>

                        <shader name="gooch" >
                                <values>
                                        <valueof uniform="m_pvm"
                                                type="RENDERER"
                                                component="PROJECTION_VIEW_MODEL" />

                                        <valueof uniform="ldir"
                                                type="LIGHT"
                                                component="NORMALIZED_DIRECTION" 
                                                id="0" />

                                        <valueof uniform="m_view"
                                                type="RENDERER"
                                                component="VIEW" />

                                        <valueof uniform="m_normal"  
                                                type="RENDERER"
                                                component="NORMAL" />

                                        <valueof uniform="m_viewModel"  
                                                type="RENDERER"
                                                component="VIEW_MODEL" />
                                                
                                        <valueof uniform="diffuse"
                                                type="COLOR"
                                                context="CURRENT" 
                                                component="DIFFUSE" />

                                        <valueof uniform="specular" type="COLOR"
                                                component = "SPECULAR" />

                                        <valueof uniform="shininess" type="COLOR"
                                                component = "SHININESS" />  

                                        <valueof uniform="alpha" type="RENDERER"
                                                component = "alpha" />  

                                        <valueof uniform="beta" type="RENDERER"
                                                component = "beta" />  

                                        <valueof uniform="blue_b" type="RENDERER"
                                                component = "blue_b" />  
                                        
                                        <valueof uniform="yellow_rg" type="RENDERER"
                                                component = "yellow_rg" />  

                                </values>
                        </shader>
                </material>
        </materials>
</materialLib>